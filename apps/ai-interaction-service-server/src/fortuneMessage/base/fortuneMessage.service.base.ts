/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FortuneMessage as PrismaFortuneMessage } from "@prisma/client";

export class FortuneMessageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FortuneMessageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.fortuneMessage.count(args);
  }

  async fortuneMessages<T extends Prisma.FortuneMessageFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.FortuneMessageFindManyArgs>
  ): Promise<PrismaFortuneMessage[]> {
    return this.prisma.fortuneMessage.findMany<Prisma.FortuneMessageFindManyArgs>(
      args
    );
  }
  async fortuneMessage<T extends Prisma.FortuneMessageFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.FortuneMessageFindUniqueArgs>
  ): Promise<PrismaFortuneMessage | null> {
    return this.prisma.fortuneMessage.findUnique(args);
  }
  async createFortuneMessage<T extends Prisma.FortuneMessageCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FortuneMessageCreateArgs>
  ): Promise<PrismaFortuneMessage> {
    return this.prisma.fortuneMessage.create<T>(args);
  }
  async updateFortuneMessage<T extends Prisma.FortuneMessageUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FortuneMessageUpdateArgs>
  ): Promise<PrismaFortuneMessage> {
    return this.prisma.fortuneMessage.update<T>(args);
  }
  async deleteFortuneMessage<T extends Prisma.FortuneMessageDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.FortuneMessageDeleteArgs>
  ): Promise<PrismaFortuneMessage> {
    return this.prisma.fortuneMessage.delete(args);
  }
}
