/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Joke as PrismaJoke } from "@prisma/client";

export class JokeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.JokeCountArgs, "select">): Promise<number> {
    return this.prisma.joke.count(args);
  }

  async jokes<T extends Prisma.JokeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.JokeFindManyArgs>
  ): Promise<PrismaJoke[]> {
    return this.prisma.joke.findMany<Prisma.JokeFindManyArgs>(args);
  }
  async joke<T extends Prisma.JokeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.JokeFindUniqueArgs>
  ): Promise<PrismaJoke | null> {
    return this.prisma.joke.findUnique(args);
  }
  async createJoke<T extends Prisma.JokeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JokeCreateArgs>
  ): Promise<PrismaJoke> {
    return this.prisma.joke.create<T>(args);
  }
  async updateJoke<T extends Prisma.JokeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JokeUpdateArgs>
  ): Promise<PrismaJoke> {
    return this.prisma.joke.update<T>(args);
  }
  async deleteJoke<T extends Prisma.JokeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.JokeDeleteArgs>
  ): Promise<PrismaJoke> {
    return this.prisma.joke.delete(args);
  }
}
